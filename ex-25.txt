#include <stdio.h>
#include <stdint.h>

void xor_block(uint8_t *out, uint8_t *a, uint8_t *b, int len) {
    for (int i = 0; i < len; i++) out[i] = a[i] ^ b[i];
}

void fake_des(uint8_t *in, uint8_t *out, int len, uint8_t key) {
    for (int i = 0; i < len; i++) out[i] = (in[i] + key) % 256;
}

void encrypt_cbc_3des(uint8_t *pt, uint8_t *ct, int len, uint8_t key1, uint8_t key2, uint8_t key3, uint8_t *iv) {
    uint8_t temp[8], block[8];
    for (int i = 0; i < len; i += 8) {
        xor_block(block, pt + i, iv, 8);
        fake_des(block, temp, 8, key1);
        fake_des(temp, temp, 8, key2);  // simulate middle decryption in 3DES
        fake_des(temp, ct + i, 8, key3);
        iv = ct + i;
    }
}

int main() {
    uint8_t plaintext[8] = "ABCDEFGH";
    uint8_t ciphertext[8];
    uint8_t iv[8] = {0};
    encrypt_cbc_3des(plaintext, ciphertext, 8, 1, 2, 3, iv);
    printf("CBC 3DES Enc: ");
    for (int i = 0; i < 8; i++) printf("%02X ", ciphertext[i]);
    return 0;
}
